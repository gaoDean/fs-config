compatible = "zmk,combos";

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <30>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
  };

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
  ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
              ╰────────╯ ╰────────╯            */


COMBO(caret,            &kp CARET,                  0   1)
COMBO(leftBracket,      &kp LEFT_BRACKET,           1   2)
COMBO(bothBracket,      &macro_brackets,            1   3)
COMBO(rightBracket,     &kp RIGHT_BRACKET,          2   3)
COMBO(pipe,             &kp PIPE2,                  3   4)
COMBO(leftParethesis,   &kp LEFT_PARENTHESIS,       6   7)
COMBO(bothParenthesis,  &macro_parentheses,         6   8)
COMBO(rightParenthesis, &kp RIGHT_PARENTHESIS,      7   8)

COMBO(hash,             &kp HASH,                   1   11)
COMBO(slash,            &kp SLASH,                  2   12)
COMBO(percentage,       &kp PERCENT,                3   13)
COMBO(colon,            &kp COLON,                  4   14)
COMBO(at,               &kp AT_SIGN,                5   15)
COMBO(exclamationMark,  &kp EXCLAMATION,            6   16)
COMBO(questionMark,     &kp QUESTION,               7   17)
// COMBO(backslash,        &kp NON_US_BACKSLASH,       8   18)

COMBO(minus,            &kp MINUS,                  10  11)
COMBO(asterisk,         &kp ASTERISK,               11  12)
COMBO(equal,            &kp EQUAL,                  12  13)
COMBO(plus,             &kp PLUS,                   13  14)
COMBO(equalEqual,       &macro_equalEqual,          10  12)
COMBO(minusEqual,       &macro_minusEqual,          10  13)
COMBO(asteriskEqual,    &macro_asteriskEqual,       11  13)
COMBO(plusEqual,        &macro_plusEqual,           12  14)
COMBO(percentEqual,     &macro_percentEqual,        3   12)
COMBO(slashEqual,       &macro_slashEqual,          2   13)
COMBO(backslash,        &kp NON_US_BACKSLASH,       15  16)
COMBO(doubleQuotes,     &kp DOUBLE_QUOTES,          16  17)
COMBO(singleQuote,      &kp SINGLE_QUOTE,           17  18)

COMBO(doubleGrave,      &macro_doubleGrave,         11  21)
COMBO(grave,            &kp GRAVE,                  12  22)
COMBO(tilde,            &kp TILDE,                  13  23)
COMBO(quadQuotes,       &macro_quadQuotes,          16  26)
COMBO(doubleSingleQuotes, &macro_doubleSingleQuotes,17  27)

COMBO(ampersand,        &kp AMPERSAND,              20  21)
COMBO(leftBrace,        &kp LEFT_BRACE,             21  22)
COMBO(rightBrace,       &kp RIGHT_BRACE,            22  23)
COMBO(bothBrace,        &macro_braces,              21  23)
COMBO(tab,              &kp TAB,                    23  24)
COMBO(leftArrow, &kp LESS_THAN, 26 27)
COMBO(rightArrow, &kp GREATER_THAN, 27 28)
COMBO(bothArrow, &macro_ltgt, 26 28)

control: control {
    timeout-ms = <50>;
    bindings = <&skq LEFT_CONTROL>;
    key-positions = <30 33>;
};
enter: enter {
    timeout-ms = <50>;
    bindings = <&kp ENTER>;
    key-positions = <31 33>;
};
alt: alt {
    timeout-ms = <50>;
    bindings = <&skq LALT>;
    key-positions = <30 32>;
};
escape: escape {
    timeout-ms = <50>;
    bindings = <&kp ESCAPE>;
    key-positions = <31 32>;
};
capsword: capsword {
    timeout-ms = <50>;
    bindings = <&caps_word>;
    key-positions = <30 31>;
};
//COMBO(enter, &kp ENTER, 31 33)
// COMBO(command, &skq LEFT_COMMAND, 31 33)
//COMBO(alt, &skq LEFT_ALT, 30 32)
//COMBO(escape, &kp ESCAPE, 31 32)
//COMBO(capsword, &caps_word, 32 33)

/* Keyboard */
COMBO(power, &macro_power, 12 13 16 17)
COMBO(reset, &reset, 11 12 13 17)
COMBO(bootloader, &bootloader, 14 15 24 25)
COMBO(bt0, &bt BT_SEL 0, 10 20)
COMBO(bt1, &bt BT_SEL 1, 19 29)
COMBO(bttog, &out OUT_TOG, 11 12 13)
COMBO(btclear, &bt BT_CLR, 4 24)

COMBO(upLeft, &kp KP_N7, 7 16)
COMBO(upRight, &kp KP_N9, 7 18)
COMBO(downLeft, &kp KP_N1, 16 27)
COMBO(downRight, &kp KP_N3, 18 27)

