#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "34keys.h"

&sk {
  release-after-ms = <STICKY_KEY_TIMEOUT>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ {

  combos {
    #include "combos.dtsi"
  };

  macros {
   #include "macros.dtsi"
  };

  behaviors {
    #include "behaviorsfs.dtsi"
  };

  keymap {
    compatible = "zmk,keymap";

    base_layer {
      label = "BASE";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp Y         &kp C         &kp L         &kp M         &kp K             &kp J         &kp F         &kp U         &kp COMMA     &kp SEMICOLON
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp I         &kp S         &kp R         &kp T         &kp G             &kp P         &kp N         &kp E         &kp A         &kp O
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp Q         &kp V         &kp W         &kp D         &kp Z             &kp B         &kp H         &kp UNDER     &kp DOT       &kp X
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                &kr_to NAV 0    &skq LSHIFT       &if_shift_dw  &kp SPACE
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    nav_layer {
      label = "NAV";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        XXX           XXX           XXX           XXX           XXX               &kp TAB       &kp N7         &kp N8        &kp N9           &kp COMMA
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        XXX           XXX           XXX           XXX           XXX               &kp DEL       &kp N4         &kp N5        &kp N6           &kp KP_DOT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        XXX           XXX           XXX           XXX           XXX               &kp N0        &kp N1         &kp N2        &kp N3           &kp KP_N5
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                &kr_to NAV 0   &mo_to GAME GAME   MO(FUNC)      &kp SPACE
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    func_layer {
      label = "FUNC";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR    &kp C_POWER       &kp F10       &kp F7         &kp F8        &kp F9        XXX
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        XXX           XXX           XXX           XXX           XXX               &kp F11       &kp F4         &kp F5        &kp F6        XXX
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        XXX           XXX           XXX           XXX           XXX               &kp F12       &kp F1         &kp F2        &kp F3        XXX
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                &kr_to NAV 0    XXX               MO(FUNC)      &kp SPACE
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    game_layer {
      label = "GAME";
      bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        XXX           XXX           &kp RIGHT     XXX           &kp UP            &kp DOWN      ___            &kp KP_N8    ___            ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___           ___           ___           ___           ___               ___           &kp KP_N4      &kp KP_N5    &kp KP_N6      ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        ___           ___           ___           ___           ___               ___           &kp LEFT       &kp KP_N2    ___            ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                &kr_to NAV 0    MO(FUNC)          &kp BKSP      &kp SPACE
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };

    qwerty_layer {
        label = "QWER";
        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp A         &kp S         &kp D         &kp F         &kp G             &kp H         &kp J         &kp K         &kp L         &kp SEMI
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA    &kp DOT        &kp SLASH
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                  &if_lctrl     &skq LSHIFT       &dw_bksp LCTRL 0      &kp SPACE
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
      >;
    };
  };
};

